{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/form.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/button\";\nfunction FormBuilderComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\")(2, \"label\", 12);\n    i0.ɵɵtext(3, \"Label:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-form-field\")(6, \"label\", 14);\n    i0.ɵɵtext(7, \"Placeholder:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 15);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FormBuilderComponent_div_10_div_2_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"mat-form-field\")(2, \"label\", 20);\n    i0.ɵɵtext(3, \"Option:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function FormBuilderComponent_div_10_div_2_div_6_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const j_r8 = restoredCtx.index;\n      const i_r2 = i0.ɵɵnextContext(2).index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.removeOption(i_r2, j_r8, \"dropdown\"));\n    });\n    i0.ɵɵtext(6, \"Remove Option\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const j_r8 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", j_r8);\n  }\n}\nfunction FormBuilderComponent_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\")(2, \"label\", 12);\n    i0.ɵɵtext(3, \"Label:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 16);\n    i0.ɵɵtemplate(6, FormBuilderComponent_div_10_div_2_div_6_Template, 7, 1, \"div\", 17);\n    i0.ɵɵelementStart(7, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function FormBuilderComponent_div_10_div_2_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.addOption(i_r2, \"dropdown\"));\n    });\n    i0.ɵɵtext(8, \"Add Option\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r2 = i0.ɵɵnextContext().index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.getOptionsArray(i_r2).controls);\n  }\n}\nfunction FormBuilderComponent_div_10_div_3_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"mat-form-field\")(2, \"label\", 20);\n    i0.ɵɵtext(3, \"Option:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function FormBuilderComponent_div_10_div_3_div_6_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const j_r18 = restoredCtx.index;\n      const i_r2 = i0.ɵɵnextContext(2).index;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.removeOption(i_r2, j_r18, \"checkbox\"));\n    });\n    i0.ɵɵtext(6, \"Remove Option\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const j_r18 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", j_r18);\n  }\n}\nfunction FormBuilderComponent_div_10_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\")(2, \"label\", 12);\n    i0.ɵɵtext(3, \"Label:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 16);\n    i0.ɵɵtemplate(6, FormBuilderComponent_div_10_div_3_div_6_Template, 7, 1, \"div\", 17);\n    i0.ɵɵelementStart(7, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function FormBuilderComponent_div_10_div_3_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.addOption(i_r2, \"checkbox\"));\n    });\n    i0.ɵɵtext(8, \"Add Option\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const field_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.getFieldOptions(field_r1).controls);\n  }\n}\nfunction FormBuilderComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, FormBuilderComponent_div_10_div_1_Template, 9, 0, \"div\", 10);\n    i0.ɵɵtemplate(2, FormBuilderComponent_div_10_div_2_Template, 9, 1, \"div\", 10);\n    i0.ɵɵtemplate(3, FormBuilderComponent_div_10_div_3_Template, 9, 1, \"div\", 10);\n    i0.ɵɵelementStart(4, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function FormBuilderComponent_div_10_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const i_r2 = restoredCtx.index;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.removeField(i_r2));\n    });\n    i0.ɵɵtext(5, \"Remove Field\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const field_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = field_r1.get(\"type\")) == null ? null : tmp_1_0.value) === \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = field_r1.get(\"type\")) == null ? null : tmp_2_0.value) === \"dropdown\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = field_r1.get(\"type\")) == null ? null : tmp_3_0.value) === \"checkbox\");\n  }\n}\nexport class FormBuilderComponent {\n  constructor(fb, formStateService) {\n    this.fb = fb;\n    this.formStateService = formStateService;\n  }\n  ngOnInit() {\n    this.form = this.fb.group({\n      formName: ['', Validators.required],\n      fields: this.fb.array([])\n    });\n    this.formStateService.getFormData().subscribe(forms => {\n      // Assuming you want to populate the form with the first fetched form (you can adjust as needed)\n      if (forms && forms.length > 0) {\n        this.populateForm(forms[0]);\n      }\n    }, error => {\n      console.error('Error fetching forms:', error);\n    });\n  }\n  addTextField() {\n    this.fields.push(this.createTextField());\n  }\n  addDropdownField() {\n    this.fields.push(this.createDropdownField());\n  }\n  addCheckboxField() {\n    this.fields.push(this.createCheckboxField());\n  }\n  createTextField() {\n    return this.fb.group({\n      type: 'text',\n      label: '',\n      placeholder: ''\n    });\n  }\n  createDropdownField() {\n    return this.fb.group({\n      type: 'dropdown',\n      label: '',\n      options: this.fb.array([])\n    });\n  }\n  createCheckboxField() {\n    return this.fb.group({\n      type: 'checkbox',\n      label: '',\n      options: this.fb.array([])\n    });\n  }\n  populateForm(formData) {\n    // ... (existing code)\n    const fieldsArray = this.form.get('fields');\n    formData.fields.forEach(field => {\n      if (field.type === 'text') {\n        fieldsArray.push(this.createTextField());\n      } else if (field.type === 'dropdown') {\n        fieldsArray.push(this.createDropdownField());\n      } else if (field.type === 'checkbox') {\n        fieldsArray.push(this.createCheckboxField());\n      }\n    });\n  }\n  removeField(index) {\n    this.fields.removeAt(index);\n  }\n  get fields() {\n    return this.form.get('fields');\n  }\n  // saveForm() {\n  //   console.log(this.form.value)\n  //   this.formStateService.updateFormData(this.form.value);\n  //   this.form.reset();\n  // }\n  // saveForm() {\n  //   console.log('Form values to be saved:', this.form.value);\n  //   this.formStateService.updateFormData(this.form.value);\n  //   this.form.reset();\n  // }\n  saveForm() {\n    console.log('Form values to be saved:', this.form.value);\n    this.formStateService.updateFormData(this.form.value).subscribe(response => {\n      console.log('Form data saved successfully:', response);\n      this.form.reset();\n    }, error => {\n      console.error('Error saving form data:', error);\n    });\n  }\n  // Helper methods for nested form arrays\n  getDropdownOptions(index) {\n    return this.fields.at(index).get('options');\n  }\n  getCheckboxOptions(index) {\n    return this.fields.at(index).get('options');\n  }\n  // addOption(parentIndex: number, type: string) {\n  //   const optionsArray = (type === 'dropdown') ? this.getDropdownOptions(parentIndex) : this.getCheckboxOptions(parentIndex);\n  //   optionsArray.push(this.fb.control(''));\n  // }\n  addOption(parentIndex, type) {\n    const optionsArray = type === 'dropdown' ? this.getDropdownOptions(parentIndex) : this.getCheckboxOptions(parentIndex);\n    optionsArray.push(this.fb.group({\n      option: ['', Validators.required] // Add the 'option' control directly to the FormGroup\n    }));\n  }\n\n  removeOption(parentIndex, optionIndex, type) {\n    const optionsArray = type === 'dropdown' ? this.getDropdownOptions(parentIndex) : this.getCheckboxOptions(parentIndex);\n    optionsArray.removeAt(optionIndex);\n  }\n  getOptionsArray(index) {\n    return this.fields.at(index).get('options');\n  }\n  getFieldOptions(field) {\n    return field.get('options');\n  }\n  static #_ = this.ɵfac = function FormBuilderComponent_Factory(t) {\n    return new (t || FormBuilderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FormService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormBuilderComponent,\n    selectors: [[\"app-form-builder\"]],\n    decls: 20,\n    vars: 2,\n    consts: [[1, \"form-container\", 3, \"formGroup\"], [1, \"form-header\"], [\"for\", \"formName\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"formName\", \"formControlName\", \"formName\", \"required\", \"\"], [\"formArrayName\", \"fields\"], [\"class\", \"form-field\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-buttons\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 3, \"click\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"id\", \"Save\", 3, \"click\"], [1, \"form-field\", 3, \"formGroupName\"], [4, \"ngIf\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"for\", \"label\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"label\", \"formControlName\", \"label\", \"required\", \"\"], [\"for\", \"placeholder\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"placeholder\", \"formControlName\", \"placeholder\", \"required\", \"\"], [\"formArrayName\", \"options\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [3, \"formGroupName\"], [\"for\", \"option\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"option\", \"formControlName\", \"option\", \"required\", \"\"]],\n    template: function FormBuilderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"header\")(3, \"h2\");\n        i0.ɵɵtext(4, \" CREATE YOUR FORM \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"mat-form-field\")(6, \"label\", 2);\n        i0.ɵɵtext(7, \"Form Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵtemplate(10, FormBuilderComponent_div_10_Template, 6, 4, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function FormBuilderComponent_Template_button_click_12_listener() {\n          return ctx.addTextField();\n        });\n        i0.ɵɵtext(13, \"Add Text Field\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function FormBuilderComponent_Template_button_click_14_listener() {\n          return ctx.addDropdownField();\n        });\n        i0.ɵɵtext(15, \"Add Dropdown Field\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function FormBuilderComponent_Template_button_click_16_listener() {\n          return ctx.addCheckboxField();\n        });\n        i0.ɵɵtext(17, \"Add Checkbox Field\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function FormBuilderComponent_Template_button_click_18_listener() {\n          return ctx.saveForm();\n        });\n        i0.ɵɵtext(19, \"Save Form\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.fields.controls);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i4.MatInput, i5.MatFormField, i6.MatButton],\n    styles: [\".form-container[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: auto;\\n}\\n\\n.form-header[_ngcontent-%COMP%] {\\n  text-align: center;\\n  padding: 20px 0;\\n}\\n#Save[_ngcontent-%COMP%]{\\n  margin: 10px;\\n  background-color: #eb6a1f;\\n  color: white;\\n}\\n.buttons[_ngcontent-%COMP%]{\\n  margin: 10px;\\n}\\n\\n.form-field[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.form-buttons[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: 20px;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mb3JtLWJ1aWxkZXIvZm9ybS1idWlsZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7QUFDQTtFQUNFLFlBQVk7RUFDWix5QkFBeUI7RUFDekIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA2MDBweDtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4uZm9ybS1oZWFkZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDIwcHggMDtcbn1cbiNTYXZle1xuICBtYXJnaW46IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlYjZhMWY7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbi5idXR0b25ze1xuICBtYXJnaW46IDEwcHg7XG59XG5cbi5mb3JtLWZpZWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmZvcm0tYnV0dG9ucyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","FormBuilderComponent_div_10_div_2_div_6_Template_button_click_5_listener","restoredCtx","ɵɵrestoreView","_r11","j_r8","index","i_r2","ɵɵnextContext","ctx_r9","ɵɵresetView","removeOption","ɵɵproperty","ɵɵtemplate","FormBuilderComponent_div_10_div_2_div_6_Template","FormBuilderComponent_div_10_div_2_Template_button_click_7_listener","_r14","ctx_r12","addOption","ɵɵadvance","ctx_r4","getOptionsArray","controls","FormBuilderComponent_div_10_div_3_div_6_Template_button_click_5_listener","_r21","j_r18","ctx_r19","FormBuilderComponent_div_10_div_3_div_6_Template","FormBuilderComponent_div_10_div_3_Template_button_click_7_listener","_r24","ctx_r22","ctx_r5","getFieldOptions","field_r1","FormBuilderComponent_div_10_div_1_Template","FormBuilderComponent_div_10_div_2_Template","FormBuilderComponent_div_10_div_3_Template","FormBuilderComponent_div_10_Template_button_click_4_listener","_r27","ctx_r26","removeField","tmp_1_0","get","value","tmp_2_0","tmp_3_0","FormBuilderComponent","constructor","fb","formStateService","ngOnInit","form","group","formName","required","fields","array","getFormData","subscribe","forms","length","populateForm","error","console","addTextField","push","createTextField","addDropdownField","createDropdownField","addCheckboxField","createCheckboxField","type","label","placeholder","options","formData","fieldsArray","forEach","field","removeAt","saveForm","log","updateFormData","response","reset","getDropdownOptions","at","getCheckboxOptions","parentIndex","optionsArray","option","optionIndex","_","ɵɵdirectiveInject","i1","FormBuilder","i2","FormService","_2","selectors","decls","vars","consts","template","FormBuilderComponent_Template","rf","ctx","FormBuilderComponent_div_10_Template","FormBuilderComponent_Template_button_click_12_listener","FormBuilderComponent_Template_button_click_14_listener","FormBuilderComponent_Template_button_click_16_listener","FormBuilderComponent_Template_button_click_18_listener"],"sources":["/Users/rimes/Desktop/NAMAN/frontend1/src/app/components/form-builder/form-builder.component.ts","/Users/rimes/Desktop/NAMAN/frontend1/src/app/components/form-builder/form-builder.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, AbstractControl } from '@angular/forms';\nimport { FormService } from 'src/app/services/form.service';\n\n@Component({\n  selector: 'app-form-builder',\n  templateUrl: './form-builder.component.html',\n  styleUrls: ['./form-builder.component.css'],\n})\nexport class FormBuilderComponent implements OnInit {\n  form!: FormGroup;\n\n  constructor(private fb: FormBuilder, private formStateService: FormService) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      formName: ['', Validators.required],\n      fields: this.fb.array([]),\n    });\n    this.formStateService.getFormData().subscribe(\n      (forms) => {\n        // Assuming you want to populate the form with the first fetched form (you can adjust as needed)\n        if (forms && forms.length > 0) {\n          this.populateForm(forms[0]);\n        }\n      },\n      (error) => {\n        console.error('Error fetching forms:', error);\n      }\n    );\n    \n  }\n  \n\n\n\naddTextField() {\n  this.fields.push(this.createTextField());\n}\n\naddDropdownField() {\n  this.fields.push(this.createDropdownField());\n}\n\naddCheckboxField() {\n  this.fields.push(this.createCheckboxField());\n}\n\ncreateTextField() {\n  return this.fb.group({\n    type: 'text',\n    label: '',\n    placeholder: '',\n  });\n}\n\ncreateDropdownField() {\n  return this.fb.group({\n    type: 'dropdown',\n    label: '',\n    options: this.fb.array([]),\n  });\n}\n\ncreateCheckboxField() {\n  return this.fb.group({\n    type: 'checkbox',\n    label: '',\n    options: this.fb.array([]),\n  });\n}\npopulateForm(formData: any) {\n  // ... (existing code)\n\n  const fieldsArray = this.form.get('fields') as FormArray;\n  formData.fields.forEach((field: any) => {\n    if (field.type === 'text') {\n      fieldsArray.push(this.createTextField());\n    } else if (field.type === 'dropdown') {\n      fieldsArray.push(this.createDropdownField());\n    } else if (field.type === 'checkbox') {\n      fieldsArray.push(this.createCheckboxField());\n    }\n  });\n}\nremoveField(index: number) {\n  this.fields.removeAt(index);\n}\n\n  get fields(): FormArray {\n  return this.form.get('fields') as FormArray;\n}\n\n// saveForm() {\n//   console.log(this.form.value)\n//   this.formStateService.updateFormData(this.form.value);\n//   this.form.reset();\n// }\n// saveForm() {\n//   console.log('Form values to be saved:', this.form.value);\n//   this.formStateService.updateFormData(this.form.value);\n//   this.form.reset();\n// }\nsaveForm() {\n  console.log('Form values to be saved:', this.form.value);\n  this.formStateService.updateFormData(this.form.value)\n    .subscribe(\n      (response) => {\n        console.log('Form data saved successfully:', response);\n        this.form.reset();\n      },\n      (error) => {\n        console.error('Error saving form data:', error);\n      }\n    );\n}\n\n\n\n\n\n\n// Helper methods for nested form arrays\ngetDropdownOptions(index: number): FormArray {\n  return (this.fields.at(index).get('options') as FormArray);\n}\n\ngetCheckboxOptions(index: number): FormArray {\n  return (this.fields.at(index).get('options') as FormArray);\n}\n\n\n// addOption(parentIndex: number, type: string) {\n//   const optionsArray = (type === 'dropdown') ? this.getDropdownOptions(parentIndex) : this.getCheckboxOptions(parentIndex);\n//   optionsArray.push(this.fb.control(''));\n// }\naddOption(parentIndex: number, type: string) {\n  const optionsArray = (type === 'dropdown') ? this.getDropdownOptions(parentIndex) : this.getCheckboxOptions(parentIndex);\n  optionsArray.push(this.fb.group({\n    option: ['', Validators.required]  // Add the 'option' control directly to the FormGroup\n  }));\n}\n\n\nremoveOption(parentIndex: number, optionIndex: number, type: string) {\n  const optionsArray = (type === 'dropdown') ? this.getDropdownOptions(parentIndex) : this.getCheckboxOptions(parentIndex);\n  optionsArray.removeAt(optionIndex);\n}\ngetOptionsArray(index: number): FormArray {\n  return (this.fields.at(index).get('options') as FormArray);\n}\ngetFieldOptions(field: AbstractControl): FormArray {\n  return (field.get('options') as FormArray);\n}\n  \n\n}","<form [formGroup]=\"form\" class=\"form-container\">\n  <div class=\"form-header\">\n    <header>\n      <h2>\n        CREATE YOUR FORM\n      </h2>\n      </header>\n  </div>\n  <mat-form-field>\n    <label for=\"formName\">Form Name:</label>\n    <input matInput type=\"text\" id=\"formName\" formControlName=\"formName\" required>\n  </mat-form-field>\n\n  <div formArrayName=\"fields\">\n    <div *ngFor=\"let field of fields.controls; let i = index\" [formGroupName]=\"i\" class=\"form-field\">\n      <div *ngIf=\"field.get('type')?.value === 'text'\">\n        <mat-form-field>\n          <label for=\"label\">Label:</label>\n          <input matInput type=\"text\" id=\"label\" formControlName=\"label\" required>\n        </mat-form-field>\n        <mat-form-field>\n          <label for=\"placeholder\">Placeholder:</label>\n          <input matInput type=\"text\" id=\"placeholder\" formControlName=\"placeholder\" required>\n        </mat-form-field>\n      </div>\n      <div *ngIf=\"field.get('type')?.value === 'dropdown'\">\n        <mat-form-field>\n          <label for=\"label\">Label:</label>\n          <input matInput type=\"text\" id=\"label\" formControlName=\"label\" required>\n        </mat-form-field>\n        <div formArrayName=\"options\">\n          <div *ngFor=\"let option of getOptionsArray(i).controls; let j = index\" [formGroupName]=\"j\">\n            <mat-form-field>\n              <label for=\"option\">Option:</label>\n              <input matInput type=\"text\" id=\"option\" formControlName=\"option\" required>\n            </mat-form-field>\n            <button type=\"button\" (click)=\"removeOption(i, j, 'dropdown')\">Remove Option</button>\n          </div>\n          <button type=\"button\" (click)=\"addOption(i, 'dropdown')\">Add Option</button>\n\n        </div>\n      </div>\n      \n      <div *ngIf=\"field.get('type')?.value === 'checkbox'\">\n        <!-- ... (checkbox field inputs) ... -->\n        <mat-form-field>\n          <label for=\"label\">Label:</label>\n          <input matInput type=\"text\" id=\"label\" formControlName=\"label\" required>\n        </mat-form-field>\n        <div formArrayName=\"options\">\n          <div *ngFor=\"let option of getFieldOptions(field).controls; let j = index\" [formGroupName]=\"j\">\n            <mat-form-field>\n              <label for=\"option\">Option:</label>\n              <input matInput type=\"text\" id=\"option\" formControlName=\"option\" required>\n            </mat-form-field>\n            <button type=\"button\" (click)=\"removeOption(i, j, 'checkbox')\">Remove Option</button>\n\n          </div>\n          <button type=\"button\" (click)=\"addOption(i, 'checkbox')\">Add Option</button>\n\n        </div>\n      </div>\n\n      <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"removeField(i)\">Remove Field</button>\n    </div>\n  </div>\n  <div class=\"form-buttons\">\n    <button type=\"button\" mat-raised-button (click)=\"addTextField()\">Add Text Field</button>\n    <button type=\"button\" mat-raised-button (click)=\"addDropdownField()\">Add Dropdown Field</button>\n    <button type=\"button\" mat-raised-button (click)=\"addCheckboxField()\">Add Checkbox Field</button>\n\n    <button type=\"button\" mat-raised-button id=\"Save\" (click)=\"saveForm()\">Save Form</button>\n  </div>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}