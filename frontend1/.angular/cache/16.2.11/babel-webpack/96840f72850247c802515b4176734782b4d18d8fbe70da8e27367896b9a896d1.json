{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FormService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000'; // Update with your server URL\n  }\n\n  updateFormData(formDetails) {\n    return this.http.post(`${this.apiUrl}/forms`, formDetails);\n  }\n  getFormData() {\n    return this.http.get(`${this.apiUrl}/forms`);\n  }\n  login(username, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      username,\n      password\n    });\n  }\n  logindetails() {\n    return this.http.get(`${this.apiUrl}/login`);\n  }\n  static #_ = this.ɵfac = function FormService_Factory(t) {\n    return new (t || FormService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FormService,\n    factory: FormService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["FormService","constructor","http","apiUrl","updateFormData","formDetails","post","getFormData","get","login","username","password","logindetails","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/rimes/Desktop/NAMAN/frontend1/src/app/services/form.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n\n  private apiUrl = 'http://localhost:3000'; // Update with your server URL\n\n  constructor(private http: HttpClient) {}\n  updateFormData(formDetails: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/forms`, formDetails);\n  }\n  getFormData(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/forms`);\n  }\n  login(username: string, password: string): Observable<any> {\n    return this.http.post(`${this.apiUrl}/login`, { username, password });\n  }\n  logindetails(): Observable<any> {\n    return this.http.get<any[]>(`${this.apiUrl}/login`);\n  }\n  // logindetails(): Observable<any[]> {\n  //   return this.http.get<any[]>(`${this.apiUrl}/login`);\n  // }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB,CAAC,CAAC;EAEH;;EACvCC,cAAcA,CAACC,WAAgB;IAC7B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,QAAQ,EAAEE,WAAW,CAAC;EAC5D;EACAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAQ,GAAG,IAAI,CAACL,MAAM,QAAQ,CAAC;EACrD;EACAM,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACT,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,QAAQ,EAAE;MAAEO,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EACvE;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACV,IAAI,CAACM,GAAG,CAAQ,GAAG,IAAI,CAACL,MAAM,QAAQ,CAAC;EACrD;EAAC,QAAAU,CAAA,G;qBAhBUb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXlB,WAAW;IAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}